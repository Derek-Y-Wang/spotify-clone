{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\large_scale\\\\SpotifyClone\\\\spotify-clone-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login.js';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = '';\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        console.log(\"person: \", user);\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlist => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlist: playlist\n        });\n      });\n      spotify.getPlaylist('37i9dQZEVXcJZyENOWUFo7').then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"foik8K8A62p+aotmH1sMm8vTMMQ=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App; //3:52\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/projects/large_scale/SpotifyClone/spotify-clone-app/src/App.js"],"names":["React","useEffect","useState","Login","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","console","log","getUserPlaylists","playlist","getPlaylist","response","discover_weekly"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,MAAMC,OAAO,GAAG,IAAIH,aAAJ,EAAhB;;AAEA,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAkBC,QAAlB,IAA8BL,iBAAiB,EAArD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,IAAI,GAAGT,eAAe,EAA5B;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAW;AACTJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAIAR,MAAAA,OAAO,CAACW,cAAR,CAAuBH,MAAvB;AAEAR,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqBX,IAAI,IAAI;AAC3BY,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,IAAxB;AACAE,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPR,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OAND;AAOFF,MAAAA,OAAO,CAACgB,gBAAR,GAA2BH,IAA3B,CAAiCI,QAAD,IAAc;AAC5Cb,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPO,UAAAA,QAAQ,EAAEA;AAFH,SAAD,CAAR;AAID,OALD;AAOAjB,MAAAA,OAAO,CAACkB,WAAR,CAAoB,wBAApB,EAA8CL,IAA9C,CAAoDM,QAAD,IACjDf,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,qBADC;AAEPU,QAAAA,eAAe,EAAED;AAFV,OAAD,CADV;AAKG;AACJ,GAhCQ,EAgCN,EAhCM,CAAT;AAkCA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGhB,KAAK,gBAAI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAAoC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAD5C;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1CQC,G;UAC6BF,iB;;;KAD7BE,G;AA4CT,eAAeA,GAAf,C,CACA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login.js';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = '';\n    const _token = hash.access_token;\n\n    if (_token){\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then(user => {\n        console.log(\"person: \", user);\n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        })\n      });\n    spotify.getUserPlaylists().then((playlist) => {\n      dispatch({\n        type: \"SET_PLAYLISTS\",\n        playlist: playlist,\n      })\n    });\n\n    spotify.getPlaylist('37i9dQZEVXcJZyENOWUFo7').then((response) =>\n      dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response,\n      })\n    );}\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {token ? (<Player spotify={spotify}/>) : (<Login />)}\n    </div>\n  );\n}\n\nexport default App;\n//3:52"]},"metadata":{},"sourceType":"module"}