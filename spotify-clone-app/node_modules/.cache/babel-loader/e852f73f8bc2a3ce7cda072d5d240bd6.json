{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\large_scale\\\\SpotifyClone\\\\spotify-clone-app\\\\src\\\\DataLayer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataLayerContext = /*#__PURE__*/createContext();\nexport const DataLayer = _ref => {\n  _s();\n\n  let {\n    initialState,\n    reducer,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DataLayerContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataLayer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = DataLayer;\nexport const useDataLayerValue = () => {\n  _s2();\n\n  return useContext(DataLayerContext);\n};\n\n_s2(useDataLayerValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DataLayer\");","map":{"version":3,"sources":["D:/projects/large_scale/SpotifyClone/spotify-clone-app/src/DataLayer.js"],"names":["React","createContext","useContext","useReducer","DataLayerContext","DataLayer","initialState","reducer","children","useDataLayerValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,UAA1C,QAA2D,OAA3D;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAtC;AAEP,OAAO,MAAMI,SAAS,GAAG;AAAA;;AAAA,MAAC;AACtBC,IAAAA,YADsB;AAEtBC,IAAAA,OAFsB;AAGtBC,IAAAA;AAHsB,GAAD;AAAA,sBAKjB,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEL,UAAU,CAACI,OAAD,EAAUD,YAAV,CAA5C;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,UALiB;AAAA,CAAlB;;GAAMH,S;;KAAAA,S;AAWb,OAAO,MAAMI,iBAAiB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,gBAAD,CAAhB;AAAA,CAA1B;;IAAMK,iB","sourcesContent":["import React, {createContext, useContext, useReducer} from \"react\";\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({\r\n    initialState,\r\n    reducer,\r\n    children\r\n    }) => (\r\n        <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n            {children}\r\n        </DataLayerContext.Provider>\r\n    );\r\n\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext)"]},"metadata":{},"sourceType":"module"}